# Load the njs script
js_path /etc/nginx/conf.d/;
js_import emby2Pan from emby.js;
js_import embyLive from emby-live.js;
# Cache images, subtitles
proxy_cache_path /var/cache/nginx/emby levels=1:2 keys_zone=emby:100m max_size=1g inactive=30d use_temp_path=off;
proxy_cache_path /var/cache/nginx/emby/subs levels=1:2 keys_zone=embysubs:10m max_size=1g inactive=30d use_temp_path=off;

server{
    gzip on;
    listen 80;
    server_name default;
    ## The default `client_max_body_size` is 1M, this might not be enough for some posters, etc.
    client_max_body_size 20M;
    subrequest_output_buffer_size 20M;
    # # Security / XSS Mitigation Headers
    # add_header X-Frame-Options "SAMEORIGIN";
    # add_header X-XSS-Protection "1; mode=block";
    # add_header X-Content-Type-Options "nosniff";
    # aliDrive direct stream need no-referrer
    add_header 'Referrer-Policy' 'no-referrer';
    set $emby http://101.33.225.246:8096;  #emby/jellyfin address

    # Proxy sockets traffic for jellyfin-mpv-shim and webClient
    location ~* /(socket|embywebsocket) {
        # Proxy emby/jellyfin Websockets traffic
        proxy_pass $emby;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Protocol $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
    }

    # redirect stream url
    location ~* /emby/(http|https|rtp|icmp):/(.*) {
        set $redirect_uri $1://$2;
        if ($args) {
            set $redirect_uri $redirect_uri?$args;
        }
        return 302 $redirect_uri;
    }

    # Cache the Subtitles
    location ~* /videos/(.*)/Subtitles {
        proxy_pass $emby;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Protocol $scheme;
        proxy_set_header X-Forwarded-Host $http_host;

        proxy_cache embysubs;
        proxy_cache_revalidate on;
        proxy_cache_lock_timeout 10s;
        proxy_cache_lock on;
        proxy_cache_valid 200 30d;
        proxy_cache_key $proxy_host$uri;
        add_header X-Cache-Status $upstream_cache_status; # This is only to check if cache is working
    }

    # Proxy PlaybackInfo
    location ~ ^(.*)/proxy(/.*)$ {
        client_body_in_file_only clean;
        rewrite ^(.*)/proxy(/.*)$ $1$2 break;
        proxy_pass $emby;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Protocol $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        # Disable buffering when the nginx proxy gets very resource heavy upon streaming
        proxy_buffering off;
        proxy_pass_request_body on;
        proxy_pass_request_headers on;
        add_header X-Proxy-Success "yes";
    }
    location ~* /Items/(.*)/PlaybackInfo {
        # client_body_in_file_only clean;
        js_content emby2Pan.transferPlaybackInfo;
    }
    # Redirect the stream to njs
    location ~* /videos/(.*)/stream {
        # Cache alist direct link
        # add_header    Cache-Control  max-age=3600;
        js_content emby2Pan.redirect2Pan;
    }
    # Redirect the stream to njs
    location ~* /Audio/(.*)/stream {
        # Cache alist direct link
        # add_header    Cache-Control  max-age=3600;
        js_content emby2Pan.redirect2Pan;
    }
    # Redirect the live to njs
    location ~* /videos/(.*)/live {
        js_content embyLive.directLive;
    }
    location ~* /videos/(.*)/master {
        js_content embyLive.directLive;
    }
    # Redirect Audio the stream to njs
    location ~* /Audio/(.*)/universal {
        # Cache alist direct link
        add_header    Cache-Control  max-age=3600;
        js_content emby2Pan.redirect2Pan;
    }
    # for webClient download ,android is SyncService api
    location ~* /Items/([^/]+)/Download {
        js_content emby2Pan.redirect2Pan;
    }

    # Cache the images
    # location ~ /Items/(.*)/Images {
    #     proxy_pass $emby;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    #     proxy_set_header X-Forwarded-Protocol $scheme;
    #     proxy_set_header X-Forwarded-Host $http_host;

    #     proxy_cache emby;
    #     proxy_cache_revalidate on;
    #     proxy_cache_lock_timeout 10s;
    #     proxy_cache_lock on;
    #     add_header X-Cache-Status $upstream_cache_status; # This is only to check if cache is working
    # }

    location / {
        # if is GET method, redirect to origin
        set $qs "";
        if ($args) {
            set $qs "?$args";
        }
        set $redirect_flag 0;
        if ($request_method = GET) {
            set $redirect_flag "${redirect_flag}1";
        }
        # not redirect web ui and user api
        if ($uri !~* ^/(web|Users|Artists|Genres)) {
            set $redirect_flag "${redirect_flag}2";
        }
        # not redirect root path
        if ($uri = /) {
            set $redirect_flag "${redirect_flag}3";
        }
        # fit StreamMusic
        if ($uri ~* (.*Similar|.*system|.*user)) {
            set $redirect_flag "${redirect_flag}4";
        }
        if ($redirect_flag = "012") {
            set $redirect_uri $emby$uri$qs;
            return 301 $redirect_uri;
        }

        # Proxy main emby/jellyfin traffic
        proxy_pass $emby;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Protocol $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        # Disable buffering when the nginx proxy gets very resource heavy upon streaming
        proxy_buffering off;
    }
}
